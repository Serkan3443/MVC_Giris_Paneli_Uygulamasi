@using MVC.Enums;
@model MVC.Entities.User

@{
	ViewData["Title"] = "Create User";
}

<h1>@ViewData["Title"]</h1>

<h4>User</h4>
<hr />
<div class="row">
	<div class="col-12">
		@*  <form asp-action="Create"> *@
		

		@* @using (Html.BeginForm()) *@
		@using (Html.BeginForm("Create", "Users", FormMethod.Post, new { autocomplete = "off" }))
		{
			@Html.AntiForgeryToken()
			@Html.ValidationSummary(false,null,new{@class="text-danger"})
			
			@*@* if(ViewBag.CreateMessage is not null)
			{
				<p class="text-danger">@ViewBag.CreateMessage</p>
			} *@

			<div class="row mb-3">
				@* <label asp-for="UserName" class="control-label"></label> *@
				@Html.LabelFor(model=>model.UserName,new{@class="col-2 col-form-label"})
				<div class="col-5">
					@* <input type="text" class="form-control" name="UserName"/> *@
					@*  <input asp-for="UserName" class="form-control" /> *@
					@Html.TextBoxFor(m=>m.UserName, new{@class="form-control"})
					@*  <span asp-validation-for="UserName" class="text-danger"></span> *@
					@Html.ValidationMessageFor(m=>m.UserName,null,new{@class="text-danger"})
				</div>
			</div>
			<div class="row mb-3">
				<label asp-for="Password" class="col-2 col-form-label"></label>
				<div class="col-5">
					@*  <input asp-for="Password" class="form-control" /> *@
					@Html.PasswordFor(m=>m.Password,new {@class="form-control"})
					<span asp-validation-for="Password" class="text-danger"></span>
				</div>
			</div>
			<div class="row mb-3">
				<label asp-for="IsActive" class="col-2 col-form-label"></label>
				<div class="col-5" style="padding-top: 7px">
					@* <input class="form-check-input" asp-for="IsActive" /> *@
					@Html.CheckBoxFor(m=>m.IsActive, new{@class="form-check-input"})
				</div>
			</div>
			<div class="row mb-3">
				<label asp-for="Status" class="col-2 col-form-label"></label>
				<div class="col-5">
					@*  DropDown *@
					@* <select asp-for="Status" class="form-select">
				<option value="@((int)Statuses.none)" Selected>@Statuses.none</option>
				<option value="@((int)Statuses.Junior)">@Statuses.Junior</option>
				<option value="@((int)Statuses.Senior)">@Statuses.Senior</option>
				<option value="@((int)Statuses.Master)">@Statuses.Master</option>
				</select> *@
					@* @* {
				List<SelectListItem> selectList = new List<SelectListItem>()
				{
				new SelectListItem()
				{
				Value=((int)Statuses.none).ToString(),
				Text=Statuses.none.ToString()

				},
				new SelectListItem(Statuses.Junior.ToString(),((int)Statuses.Junior).ToString()),
				new SelectListItem(Statuses.Senior.ToString(),((int)Statuses.Senior).ToString()),
				new SelectListItem(Statuses.Master.ToString(),((int)Statuses.Master).ToString()),
				};
				}
				@Html.DropDownListFor(m=>m.Status, selectList, new {@class="form-select"}) *@

					@*  Radio Button  *@
					@* <div class="form-check form-check-inline">
				<input asp-for="Status" type="radio" class="form-check-input" value="@((int)Statuses.none)" id="status1" checked />
				<label asp-for="Status" class="form-check-label" for="status1">@Statuses.none</label>
				</div>
				<div class="form-check form-check-inline">
				<input asp-for="Status" type="radio" class="form-check-input" value="@((int)Statuses.Junior)" id="status2" />
				<label asp-for="Status" class="form-check-label" for="status2">@Statuses.Junior</label>
				</div>
				<div class="form-check form-check-inline">
				<input asp-for="Status" type="radio" class="form-check-input" value="@((int)Statuses.Senior)" id="status3" checked />
				<label asp-for="Status" class="form-check-label" for="status3">@Statuses.Senior</label>
				</div>
				<div class="form-check form-check-inline">
				<input asp-for="Status" type="radio" class="form-check-input" value="@((int)Statuses.Master)" id="status4" checked />
				<label asp-for="Status" class="form-check-label" for="Status4">@Statuses.Master</label>
				</div> *@

					<div class="form-check form-check-inline">
						@Html.RadioButton("Status",(int)Statuses.none,true,new{@class="form-check-input",id="status1" })
						@Html.Label("Status",Statuses.none.ToString(),new {@for="status1"})
					</div>

					<div class="form-check form-check-inline">
						@Html.RadioButton("Status",(int)Statuses.Junior,new{@class="form-check-input",id="status2" })
						@Html.Label("Status",Statuses.Junior.ToString(),new {@for="status2"})
					</div>

					<div class="form-check form-check-inline">
						@Html.RadioButton("Status",(int)Statuses.Senior,new{@class="form-check-input",id="status3" })
						@Html.Label("Status",Statuses.Senior.ToString(),new {@for="status3"})
					</div>

					<div class="form-check form-check-inline">
						@Html.RadioButton("Status",(int)Statuses.Master,new{@class="form-check-input",id="status4" })
						@Html.Label("Status",Statuses.Master.ToString(),new {@for="status4"})
					</div>

				</div>
			</div>
			<div class="row mb-3">
				<label asp-for="Birthdate" class="col-2 col-form-label"></label>
				<div class="col-5">
					<input asp-for="Birthdate" class="form-control" />
					<span asp-validation-for="Birthdate" class="text-danger"></span>
				</div>
			</div>

			<div class="row mb-3">
				<label asp-for="RoleId" class="col-2 col-form-label"></label>
				<div class="col-5">
					@* <select asp-for="RoleId" class="form-select" asp-items="ViewBag.Roles">
						<option value="">--Select--</option>
					</select> *@
					@Html.DropDownListFor(m=>m.RoleId, ViewBag.Roles as SelectList, "--Select --",new{@class
					="form-select"} )
					<span asp-validation-for="RoleId" class="text-danger"></span>
				</div>
			</div>
			<div class="row mb-3">
				<div class="offset-2 col-5">
					<input type="submit" value="Save" class="btn btn-primary" />
					&nbsp;&nbsp;
					<button type="reset" class="btn btn-outline-danger">Reset</button>
					&nbsp; &nbsp;
					@* <a asp-action="Index">Back to User List</a> *@
					@* @Html.ActionLink("Back to User list", "Index","Users") *@
					@Html.ActionLink("Back to User list","Index")
				</div>
			</div>
			@* </form> *@
		}
	</div>
</div>

<div>
	<a asp-action="Index">Back to List</a>
</div>

