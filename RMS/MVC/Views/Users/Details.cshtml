@using System.Globalization;
@model MVC.Entities.User

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>User</h4>
    <hr />
    <dl class="row">
       
        <dt class = "col-sm-2">
            @*UserName*@
            @Html.DisplayNameFor(model => model.UserName)
        </dt>
        <dd class = "col-sm-10">
            @*Model UserName*@
            @Html.DisplayFor(model => model.UserName)
        </dd>
        <dt class = "col-sm-2">
            @*Password*@
           @Html.DisplayNameFor(model => model.Password) 
           
        </dt>
        <dd class = "col-sm-10">
            @* @Html.DisplayFor(model => model.Password) *@
            @(new string('*', Model.Password.Length))
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>
        <dd class = "col-sm-10">
          @*   @Html.DisplayFor(model => model.IsActive) *@
          @(Model.IsActive ? "Yes": "No")
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Birthdate)
        </dt>
        <dd class = "col-sm-10">
           @*  @Html.DisplayFor(model => model.Birthdate) *@
            @(Model.Birthdate.HasValue ? Model.Birthdate.Value.ToString("MM/dd/yyyy",new CultureInfo("en-US")):"")
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Role)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Role.Name)
        </dd>
    </dl>
</div>
<div>
    @* <a href="/Users/Edit/@Model.Id">Edit</a> *@@*HTML*@
    @Html.ActionLink("Edit","Edit","Users", new {Id=Model.Id})
    @* <a href="/Users/Index/Back To List></a> *@@*HTML*@
    @Html.ActionLink("Back To List", "Index")
    <a asp-action="Index">Back to List</a>
</div>
